# Problem: Minimize Malware Spread - https://leetcode.com/problems/minimize-malware-spread/

class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        n = len(graph)
        adj = [[] for i in range(n)]
        for i in range(n):
            for j in range(n):
                if i==j:continue
                if graph[i][j]==1:adj[i].append(j)
        ans = float('inf')
        res = None
        m = len(initial)
        def dfs(node,infected):
            if infected[node] == True:return 0
            ans = 1
            infected[node]=True            
            for x in adj[node]:
                if infected[x] == False:ans += dfs(x,infected)
            return ans        
        for i in range(m):
            infected = [False]*n
            new = 0
            for j in range(m):
                if i==j : continue
                if new > ans: break
                new += dfs(initial[j],infected)
            if new < ans :
                res = initial[i]       
                ans = new
            elif new == ans:
                res = initial[i] if initial[i] < res else res                
        return  res